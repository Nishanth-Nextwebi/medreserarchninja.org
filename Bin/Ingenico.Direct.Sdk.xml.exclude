<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ingenico.Direct.Sdk</name>
    </assembly>
    <members>
        <member name="T:Ingenico.Direct.Sdk.AbstractParamRequest">
            <summary>
            Represents a set of request parameters.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.ApiException">
            <summary>
            Represents an error response from the Ingenico ePayments platform which contains an ID and a list of errors.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.ApiException.StatusCode">
            <summary>
            Gets the HTTP status code that was returned by the Ingenico ePayments platform.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.ApiException.ResponseBody">
            <summary>
            Gets the raw response body that was returned by the Ingenico ePayments platform.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.ApiException.ErrorId">
            <summary>
            Gets the error identifier received from the Ingenico ePayments platform if available.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.ApiException.Errors">
            <summary>
            Gets the error list received from the Ingenico ePayments platform if available. Never <c>null</c>.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.ApiResource">
            <summary>
            Base class of all Ingenico ePayments platform API resources.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.AuthorizationException">
            <summary>
            Represents an error response from the Ingenico ePayments platform when authorization failed.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.CallContext">
            <summary>
            A call context can be used to send extra information with a request, and to receive extra information from a response.
            Please note that this class is not thread-safe. Each request should get its own call context instance.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.CallContext.WithIdempotenceKey(System.String)">
            <summary>
            Sets the idempotence key to use for the next request for which this call context is used.
            </summary>
            <param name="idempotenceKey">Idempotence key.</param>
            <returns>This.</returns>
        </member>
        <member name="P:Ingenico.Direct.Sdk.CallContext.IdempotenceRequestTimestamp">
            <summary>
            Gets the idempotence request timestamp from the response to the
            last request for which this call context was used.
            </summary>
            <value>The idempotence request timestamp.</value>
            <remarks>Returns <c>null</c> if no idempotencerequest was present.
             The setter should only be called by <see cref="T:Ingenico.Direct.Sdk.Communicator"/> objects based
            on the response to the request for which this call context was used.
            </remarks>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Client">
             <summary>
             Ingenico ePayments platform client. Thread-safe.
            
             This client and all its child clients are bound to one specific value for the <i>X-GCS-ClientMetaInfo</i> header.
             To get a new client with a different header value, use <see cref="M:Ingenico.Direct.Sdk.Client.WithClientMetaInfo(System.String)"/>.
             </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Client.WithClientMetaInfo(System.String)">
            <summary>
            Returns a new Client which uses the passed meta data for the <i>X-GCS-ClientMetaInfo</i> header.
            </summary>
            <param name="clientMetaInfo">JSON string containing the meta data for the client</param>
            <exception cref="T:Ingenico.Direct.Sdk.MarshallerSyntaxException">if the given clientMetaInfo is not a valid JSON string</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Client.CloseExpiredConnections">
            <summary>
            Utility method that delegates the call to this client's communicator.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Client.CloseIdleConnections(System.TimeSpan)">
            <summary>
            Utility method that delegates the call to this client's communicator.
            </summary>
            <param name="timespan">Idle time.</param>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Client.Dispose">
            <summary>
            Releases any system resources associated with this object.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Client.WithNewMerchant(System.String)">
            <summary>
            Resource /v2/{merchantId}
            </summary>
            <param name="merchantId">string</param>
            <returns>MerchantClient</returns>
        </member>
        <member name="T:Ingenico.Direct.Sdk.CommunicationException">
            <summary>
            Indicates an exception regarding the communication with the Ingenico ePayments platform such as a connection exception.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Communicator">
            <summary>
            Used to communicate with the Ingenico ePayments platform web services.
            </summary>
            <remarks>
            It contains all the logic to transform a request object to a HTTP request and a HTTP response to a response object.
            It is also thread safe.
            </remarks>
        </member>
        <member name="P:Ingenico.Direct.Sdk.Communicator.ApiEndpoint">
            <summary>
            Gets the Ingenico ePayments platform API endpoint URI. This URI's path will be <c>null</c> or empty.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.Communicator.Connection">
            <summary>
            Gets the <see cref="T:Ingenico.Direct.Sdk.IConnection"/> object associated with this session. Never <c>null</c>.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.Communicator.MetaDataProvider">
            <summary>
            Gets the <see cref="P:Ingenico.Direct.Sdk.Communicator.MetaDataProvider"/> object associated with this session. Never <c>null</c>.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.Communicator.Authenticator">
            <summary>
            Gets he <see cref="T:Ingenico.Direct.Sdk.IAuthenticator"/> object associated with this session. Never <c>null</c>.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.Communicator.Marshaller">
            <summary>
            Gets the <see cref="T:Ingenico.Direct.Sdk.IMarshaller"/> object associated with this communicator. Never <c>null</c>.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Communicator.Dispose">
            <summary>
            Releases all resource used by the <see cref="T:Ingenico.Direct.Sdk.Communicator"/> object.
            </summary>
            <remarks>Call <see cref="M:Ingenico.Direct.Sdk.Communicator.Dispose"/> when you are finished using the
            <see cref="T:Ingenico.Direct.Sdk.Communicator"/>. The <see cref="M:Ingenico.Direct.Sdk.Communicator.Dispose"/> method leaves the
            <see cref="T:Ingenico.Direct.Sdk.Communicator"/> in an unusable state. After calling <see cref="M:Ingenico.Direct.Sdk.Communicator.Dispose"/>,
            you must release all references to the <see cref="T:Ingenico.Direct.Sdk.Communicator"/> so the garbage
            collector can reclaim the memory that the <see cref="T:Ingenico.Direct.Sdk.Communicator"/> was occupying.</remarks>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Communicator.Get``1(System.String,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},Ingenico.Direct.Sdk.AbstractParamRequest,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Corresponds to the HTTP Get method.
            </summary>
            <param name="relativePath">The path to call, relative to the base URI.</param>
            <param name="requestHeaders">An optional list of request headers.</param>
            <param name="requestParameters">The optional set of request parameters.</param>
            <param name="context">The optional call context to use</param>
            <typeparam name="T">Type of the response.</typeparam>
            <exception cref="T:Ingenico.Direct.Sdk.CommunicationException"> when an exception occurred communicating with the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ResponseException">when an error response was received from the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">when an error response was received from the Ingenico ePayments platform which contained a list of errors</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Communicator.Get(System.String,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},Ingenico.Direct.Sdk.AbstractParamRequest,System.Action{System.IO.Stream,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IResponseHeader}},Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Corresponds to the HTTP Get method.
            </summary>
            <param name="relativePath">The path to call, relative to the base URI.</param>
            <param name="requestHeaders">An optional list of request headers.</param>
            <param name="requestParameters">The optional set of request parameters.</param>
            <param name="bodyHandler">A callback that receives the contents of the body as a stream</param>
            <param name="context">The optional call context to use</param>
            <exception cref="T:Ingenico.Direct.Sdk.CommunicationException"> when an exception occurred communicating with the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ResponseException">when an error response was received from the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">when an error response was received from the Ingenico ePayments platform which contained a list of errors</exception>
            <exception cref="T:Ingenico.Direct.Sdk.BodyHandlerException">when the BodyHandler throws an exception</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Communicator.Delete``1(System.String,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},Ingenico.Direct.Sdk.AbstractParamRequest,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Corresponds to the HTTP DELETE method.
            </summary>
            <param name="relativePath">The path to call, relative to the base URI.</param>
            <param name="requestHeaders">An optional list of request headers.</param>
            <param name="requestParameters">The optional set of request parameters.</param>
            <param name="context">The optional call context to use</param>
            <typeparam name="T">Type of the response.</typeparam>
            <exception cref="T:Ingenico.Direct.Sdk.CommunicationException"> when an exception occurred communicating with the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ResponseException">when an error response was received from the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">when an error response was received from the Ingenico ePayments platform which contained a list of errors</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Communicator.Delete(System.String,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},Ingenico.Direct.Sdk.AbstractParamRequest,System.Action{System.IO.Stream,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IResponseHeader}},Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Corresponds to the HTTP DELETE method.
            </summary>
            <param name="relativePath">The path to call, relative to the base URI.</param>
            <param name="requestHeaders">An optional list of request headers.</param>
            <param name="requestParameters">The optional set of request parameters.</param>
            <param name="bodyHandler">A callback that receives the contents of the body as a stream</param>
            <param name="context">The optional call context to use</param>
            <exception cref="T:Ingenico.Direct.Sdk.CommunicationException"> when an exception occurred communicating with the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ResponseException">when an error response was received from the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">when an error response was received from the Ingenico ePayments platform which contained a list of errors</exception>
            <exception cref="T:Ingenico.Direct.Sdk.BodyHandlerException">when the BodyHandler throws an exception</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Communicator.Post``1(System.String,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},Ingenico.Direct.Sdk.AbstractParamRequest,System.Object,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Corresponds to the HTTP POST method.
            </summary>
            <param name="relativePath">The path to call, relative to the base URI.</param>
            <param name="requestHeaders">An optional list of request headers.</param>
            <param name="requestParameters">The optional set of request parameters.</param>
            <param name="requestBody">The optional request body to send.</param>
            <param name="context">The optional call context to use</param>
            <typeparam name="T">Type of the response.</typeparam>
            <exception cref="T:Ingenico.Direct.Sdk.CommunicationException"> when an exception occurred communicating with the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ResponseException">when an error response was received from the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">when an error response was received from the Ingenico ePayments platform which contained a list of errors</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Communicator.Post(System.String,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},Ingenico.Direct.Sdk.AbstractParamRequest,System.Object,System.Action{System.IO.Stream,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IResponseHeader}},Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Corresponds to the HTTP POST method.
            </summary>
            <param name="relativePath">The path to call, relative to the base URI.</param>
            <param name="requestHeaders">An optional list of request headers.</param>
            <param name="requestParameters">The optional set of request parameters.</param>
            <param name="requestBody">The optional request body to send.</param>
            <param name="bodyHandler">A callback that receives the contents of the body as a stream</param>
            <param name="context">The optional call context to use</param>
            <exception cref="T:Ingenico.Direct.Sdk.CommunicationException"> when an exception occurred communicating with the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ResponseException">when an error response was received from the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">when an error response was received from the Ingenico ePayments platform which contained a list of errors</exception>
            <exception cref="T:Ingenico.Direct.Sdk.BodyHandlerException">when the BodyHandler throws an exception</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Communicator.Put``1(System.String,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},Ingenico.Direct.Sdk.AbstractParamRequest,System.Object,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Corresponds to the HTTP PUT method.
            </summary>
            <param name="relativePath">The path to call, relative to the base URI.</param>
            <param name="requestHeaders">An optional list of request headers.</param>
            <param name="requestParameters">The optional set of request parameters.</param>
            <param name="requestBody">The optional request body to send.</param>
            <param name="context">The optional call context to use</param>
            <typeparam name="T">Type of the response.</typeparam>
            <exception cref="T:Ingenico.Direct.Sdk.CommunicationException"> when an exception occurred communicating with the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ResponseException">when an error response was received from the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">when an error response was received from the Ingenico ePayments platform which contained a list of errors</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Communicator.Put(System.String,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},Ingenico.Direct.Sdk.AbstractParamRequest,System.Object,System.Action{System.IO.Stream,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IResponseHeader}},Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Corresponds to the HTTP PUT method.
            </summary>
            <param name="relativePath">The path to call, relative to the base URI.</param>
            <param name="requestHeaders">An optional list of request headers.</param>
            <param name="requestParameters">The optional set of request parameters.</param>
            <param name="requestBody">The optional request body to send.</param>
            <param name="bodyHandler">A callback that receives the contents of the body as a stream</param>
            <param name="context">The optional call context to use</param>
            <exception cref="T:Ingenico.Direct.Sdk.CommunicationException"> when an exception occurred communicating with the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ResponseException">when an error response was received from the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">when an error response was received from the Ingenico ePayments platform which contained a list of errors</exception>
            <exception cref="T:Ingenico.Direct.Sdk.BodyHandlerException">when the BodyHandler throws an exception</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Communicator.Unmarshal``1(System.String)">
            <summary>
            Unmarshal a JSON string to a response object.
            </summary>
            <param name="responseJson">The JSON that will be parsed.</param>
            <typeparam name="T">The response type.</typeparam>
            <exception cref="T:Ingenico.Direct.Sdk.MarshallerSyntaxException">if the JSON is not a valid representation for an object of the given type</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Communicator.CloseExpiredConnections">
            <summary>
            Utility method that delegates the call to this communicator's session's connection if that's an instance of <see cref="T:Ingenico.Direct.Sdk.IPooledConnection"/>.
            If not this method does nothing.
            <seealso cref="M:Ingenico.Direct.Sdk.IPooledConnection.CloseExpiredConnections"/>
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Communicator.CloseIdleConnections(System.TimeSpan)">
            <summary>
            Utility method that delegates the call to this communicator's session's connection if that's an instance of
            <see cref="T:Ingenico.Direct.Sdk.IPooledConnection"/>.
            </summary>
            <param name="timespan">Idle time.</param>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Communicator.AddGenericHeaders(System.Net.Http.HttpMethod,System.Uri,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Adds the necessary headers to the given list of headers. This includes the authorization header,
            which uses other headers, so when you need to override this method,
            make sure to call <c>base.AddGenericHeaders</c> at the <i>end</i> of your overridden method.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Communicator.GetHeaderDateString">
            <summary>
            Gets the date in the preferred format for the HTTP date header (RFC1123).
            </summary>
            <returns>The header date string.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Communicator.ThrowExceptionIfNecessary(System.Net.HttpStatusCode,System.IO.Stream,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IResponseHeader},System.String)">
            <summary>
            Checks the response for errors and throws an exception if necessary.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.CommunicatorBuilder">
            <summary>
            Builder for a <see cref="T:Ingenico.Direct.Sdk.Communicator"/> object.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.CommunicatorBuilder.WithApiEndpoint(System.Uri)">
            <summary>
            Sets the Ingenico ePayments platform API endpoint URI to use.
            </summary>
            <param name="apiEndpoint">The API endpoint.</param>
            <returns>This.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.CommunicatorBuilder.WithConnection(Ingenico.Direct.Sdk.IConnection)">
            <summary>
            Sets the <see cref="T:Ingenico.Direct.Sdk.IConnection"/> to use.
            </summary>
            <param name="connection">The connection.</param>
            <returns>This.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.CommunicatorBuilder.WithAuthenticator(Ingenico.Direct.Sdk.IAuthenticator)">
            <summary>
            Sets the <see cref="T:Ingenico.Direct.Sdk.IAuthenticator"/> to use.
            </summary>
            <param name="authenticator">The authenticator.</param>
            <returns>This.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.CommunicatorBuilder.WithMetaDataProvider(Ingenico.Direct.Sdk.MetaDataProvider)">
            <summary>
            Sets the <see cref="T:Ingenico.Direct.Sdk.MetaDataProvider"/> to use.
            </summary>
            <param name="metaDataProvider">Meta data provider.</param>
            <returns>This.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.CommunicatorBuilder.WithMarshaller(Ingenico.Direct.Sdk.IMarshaller)">
            <summary>
            Sets the <see cref="T:Ingenico.Direct.Sdk.IMarshaller"/> to use.
            </summary>
            <param name="marshaller">Marshaller.</param>
            <returns>This.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.CommunicatorBuilder.Build">
            <summary>
            Creates a fully initialized <see cref="T:Ingenico.Direct.Sdk.Communicator"/> object.
            </summary>
            <exception cref="T:System.ArgumentException">if not all required components are set</exception>
        </member>
        <member name="T:Ingenico.Direct.Sdk.CommunicatorConfiguration">
            <summary>
            Configuration for the communicator.
            </summary>
        </member>
        <member name="F:Ingenico.Direct.Sdk.CommunicatorConfiguration.DefaultMaxConnections">
            <summary>
            The default number of maximum connections
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.CommunicatorConfiguration.ApiEndpoint">
            <summary>
            Gets or sets the Ingenico ePayments platform API endpoint URI.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.CommunicatorConfiguration.ApiKeyId">
            <summary>
            Gets or sets an identifier for the secret API key. The <c>apiKeyId</c> can be
            retrieved from the Configuration Center. This identifier is visible in
            the HTTP request and is also used to identify the correct account.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.CommunicatorConfiguration.SecretApiKey">
            <summary>
            Gets or sets a shared secret. The shared secret can be retrieved from the
            Configuration Center. An <c>apiKeyId</c> and <c>secretApiKey</c> always
            go hand-in-hand, the difference is that <c>secretApiKey</c> is never
            visible in the HTTP request. This secret is used as input for the HMAC
            algorithm.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.CommunicatorConfiguration.ConnectTimeout">
            <summary>
            Gets or sets the direct timeout
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.CommunicatorConfiguration.SocketTimeout">
            <summary>
            Gets or sets the socket timeout
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.CommunicatorConfiguration.MaxConnections">
            <summary>
            Gets or sets the maximal number of connections
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.CommunicatorConfiguration.AuthorizationType">
            <summary>
            Gets or sets the type of the authorization.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.CommunicatorConfiguration.Proxy">
            <summary>
            Gets the proxy object
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.CommunicatorConfiguration.ProxyUri">
            <summary>
            Gets or sets the proxy URI.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.CommunicatorConfiguration.ProxyUserName">
            <summary>
            Gets or sets the proxy username.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.CommunicatorConfiguration.ProxyPassword">
            <summary>
            Gets or sets the proxy password.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.CommunicatorConfiguration.Integrator">
            <summary>
            Gets or sets the integrator.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.CommunicatorConfiguration.ShoppingCartExtension">
            <summary>
            Gets or sets the shoppingcart extension.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.CommunicatorConfiguration.WithApiEndpoint(System.Uri)">
            <summary>
            Returns this with the API endpoint assigned.
            </summary>
            <param name="apiEndpoint">API endpoint.</param>
            <returns>This.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.CommunicatorConfiguration.WithApiKeyId(System.String)">
            <summary>
            Returns this with the API key identifier assigned.
            </summary>
            <param name="apiKeyId">The API key id</param>
            <returns>This.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.CommunicatorConfiguration.WithSecretApiKey(System.String)">
            <summary>
            Returns this with the secret API key assigned.
            </summary>
            <param name="secretApiKey">Secret API key.</param>
            <returns>This.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.CommunicatorConfiguration.WithAuthorizationType(Ingenico.Direct.Sdk.DefaultImpl.AuthorizationType)">
            <summary>
            Returns this with the type of the authorization assigned.
            </summary>
            <param name="authorizationType">Authorization type.</param>
            <returns>This.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.CommunicatorConfiguration.WithConnectTimeout(System.Int32)">
            <summary>
            Returns this with the the direct timeout assigned.
            </summary>
            <param name="connectTimeout">The direct timeout.</param>
            <returns>This.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.CommunicatorConfiguration.WithSocketTimeout(System.Int32)">
            <summary>
            Returns this with the the socket timeout assigned.
            </summary>
            <param name="socketTimeout">The socket timeout.</param>
            <returns>This.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.CommunicatorConfiguration.WithMaxConnections(System.Int32)">
            <summary>
            Returns this with the maximum number of connections assigned.
            </summary>
            <param name="maxConnections">The maximum number of connections.</param>
            <returns>This.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.CommunicatorConfiguration.WithProxyUri(System.Uri)">
            <summary>
            Returns this with the proxy URI assigned.
            </summary>
            <param name="proxyUri">The proxy URI.</param>
            <returns>This.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.CommunicatorConfiguration.WithProxyUserName(System.String)">
            <summary>
            Returns this with the proxy username assigned.
            </summary>
            <param name="proxyName">The proxy username.</param>
            <returns>This.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.CommunicatorConfiguration.WithProxyPassword(System.String)">
            <summary>
            Returns this with the proxy password assigned.
            </summary>
            <param name="proxyPassword">The proxy password.</param>
            <returns>This.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.CommunicatorConfiguration.WithIntegrator(System.String)">
            <summary>
            Returns this with the integrator assigned.
            </summary>
            <param name="integrator">The integrator.</param>
            <returns>This.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.CommunicatorConfiguration.WithShoppingCartExtension(Ingenico.Direct.Sdk.ShoppingCartExtension)">
            <summary>
            Returns this with the shopping cart extension assigned.
            </summary>
            <param name="shoppingCartExtension">The shopping cart extension.</param>
            <returns>This.</returns>
        </member>
        <member name="T:Ingenico.Direct.Sdk.DeclinedPaymentException">
            <summary>
            Represents an error response from a create payment call.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.DeclinedPaymentException.CreatePaymentResponse">
            <summary>
            Gets the result of creating a payment if available, otherwise <c>null</c>.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.DeclinedRefundException">
            <summary>
            Represents an error response from a refund call.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.DeclinedRefundException.RefundResult">
            <summary>
            Gets the result of creating a refund if available, otherwise <c>null</c>.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.DeclinedTransactionException">
            <summary>
            Represents an error response from a create payment, payout or refund call.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.DefaultImpl.AuthorizationType.GetValueOf(System.String)">
            <summary>
            Returns the enum value of the specified string.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.DefaultImpl.DefaultAuthenticator">
            <summary>
            Default <see cref="T:Ingenico.Direct.Sdk.IAuthenticator"/> implementation.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.DefaultImpl.DefaultAuthenticator.#ctor(Ingenico.Direct.Sdk.DefaultImpl.AuthorizationType,System.String,System.String)">
            <param name="authType">Based on this value both the Ingenico ePayments platform and the merchant know which security implementation is used.
                   A version number is used for backward compatibility in the future.</param>
            <param name="apiKeyId">An identifier for the secret API key. The apiKeyId can be retrieved from the Configuration Center.
                   This identifier is visible in the HTTP request and is also used to identify the correct account.</param>
            <param name="secretApiKey">A shared secret. The shared secret can be retrieved from the Configuration Center.
                   An apiKeyId and secretApiKey always go hand-in-hand, the difference is that secretApiKey is never visible in the HTTP request.
                   This secret is used as input for the HMAC algorithm.</param>
        </member>
        <member name="T:Ingenico.Direct.Sdk.DefaultImpl.DefaultConnection">
            <summary>
            The default implementation for the connection interface. Supports Pooling, and is thread safe.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.DefaultImpl.DefaultMarshaller">
            <summary>
            <see cref="T:Ingenico.Direct.Sdk.IMarshaller"/> implementation based on <a href="http://www.newtonsoft.com/json">Json.NET</a>.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.DirectException">
            <summary>
            Represents an error response from the Ingenico ePayments platform when something went wrong at the Ingenico ePayments platform or further downstream.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.EntityHeader">
            <summary>
            A header that specifies metadata about the content of the request or response. Immutable.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.EntityHeader.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.EntityHeader.Value">
            <summary>
            Gets or sets the un-encoded value.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Factory">
            <summary>
            Ingenico ePayments platform factory for several SDK components.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Factory.CreateConfiguration(System.String,System.String,System.Uri,System.String)">
            <summary>
            Creates a <see cref="T:Ingenico.Direct.Sdk.CommunicatorConfiguration"/> based on the provided values.
            </summary>
            <param name="apiKeyId">The API key identifier.</param>
            <param name="secretApiKey">The secret API key.</param>
            <param name="apiEndpoint">The URI of the Direct API.</param>
            <param name="integrator">The integrator of the SDK.</param>
            <returns>The communicator configuration that can still be changed.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Factory.CreateConfiguration(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Creates a <see cref="T:Ingenico.Direct.Sdk.CommunicatorConfiguration"/> based on the configuration
            values in <c>configurationDictionary</c>, <c>apiKeyId</c> and
            <c>secretApiKey</c>.
            </summary>
            <param name="configurationDictionary">Dictionary containing configuration.</param>
            <param name="apiKeyId">The API key identifier.</param>
            <param name="secretApiKey">The secret API key.</param>
            <returns>The communicator configuration that can still be changed.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Factory.CreateCommunicatorBuilder(System.String,System.String,System.Uri,System.String)">
            <summary>
            Creates a <see cref="T:Ingenico.Direct.Sdk.CommunicatorBuilder"/> based on the provided values.
            </summary>
            <param name="apiKeyId">The API key identifier.</param>
            <param name="secretApiKey">The secret API key.</param>
            <param name="apiEndpoint">The URI of the Direct API.</param>
            <param name="integrator">The integrator of the SDK.</param>
            <returns>The communicator builder that can still be changed.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Factory.CreateCommunicatorBuilder(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Creates a <see cref="T:Ingenico.Direct.Sdk.CommunicatorBuilder"/> based on the configuration
            values in <c>configurationDictionary</c>, <c>apiKeyId</c> and
            <c>secretApiKey</c>.
            </summary>
            <param name="configurationDictionary">Dictionary containing configuration.</param>
            <param name="apiKeyId">The API key identifier.</param>
            <param name="secretApiKey">The secret API key.</param>
            <returns>The communicator builder that can still be changed.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Factory.CreateCommunicatorBuilder(Ingenico.Direct.Sdk.CommunicatorConfiguration)">
            <summary>
            Creates a <see cref="T:Ingenico.Direct.Sdk.CommunicatorBuilder"/> based on the passed configuration.
            </summary>
            <returns>The communicator builder that can still be changed.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Factory.CreateCommunicator(System.String,System.String,System.Uri,System.String)">
            <summary>
            Creates a <see cref="T:Ingenico.Direct.Sdk.ICommunicator"/> based on the configuration values in
            your <c>app.conf</c> or <c>web.conf</c> file,
            <c>apiKeyId</c> and <c>secretApiKey</c>.
            </summary>
            <param name="apiKeyId">The API key identifier.</param>
            <param name="secretApiKey">The secret API key.</param>
            <param name="apiEndpoint">The URI of the Direct API.</param>
            <param name="integrator">The integrator of the SDK.</param>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Factory.CreateCommunicator(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Creates a <see cref="T:Ingenico.Direct.Sdk.ICommunicator"/> based on the configuration values
            <c>configurationDictionary</c>, <c>apiKeyId</c> and
            <c>secretApiKey</c>.
            </summary>
            <param name="configurationDictionary">Dictionary containing configuration.</param>
            <param name="apiKeyId">The API key identifier.</param>
            <param name="secretApiKey">The secret API key.</param>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Factory.CreateCommunicator(Ingenico.Direct.Sdk.CommunicatorConfiguration)">
            <summary>
            Creates a <see cref="T:Ingenico.Direct.Sdk.ICommunicator"/> based on the passed configuration.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Factory.CreateCommunicator(System.Uri,Ingenico.Direct.Sdk.IConnection,Ingenico.Direct.Sdk.IAuthenticator,Ingenico.Direct.Sdk.MetaDataProvider)">
            <summary>
            Creates a <see cref="T:Ingenico.Direct.Sdk.ICommunicator"/> based on the passed fields.
            </summary>
            <param name="apiEndpoint">The Ingenico ePayments platform API endpoint URI to use.</param>
            <param name="connection">The <see cref="T:Ingenico.Direct.Sdk.IConnection"/> to use.</param>
            <param name="authenticator">The <see cref="T:Ingenico.Direct.Sdk.IAuthenticator"/> to use.</param>
            <param name="metaDataProvider">The <see cref="T:Ingenico.Direct.Sdk.MetaDataProvider"/> to use.</param>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Factory.CreateCommunicator(System.Uri,Ingenico.Direct.Sdk.IConnection,Ingenico.Direct.Sdk.IAuthenticator,Ingenico.Direct.Sdk.MetaDataProvider,Ingenico.Direct.Sdk.IMarshaller)">
            <summary>
            Creates a <see cref="T:Ingenico.Direct.Sdk.ICommunicator"/> based on the passed fields.
            </summary>
            <param name="apiEndpoint">The Ingenico ePayments platform API endpoint URI to use.</param>
            <param name="connection">The <see cref="T:Ingenico.Direct.Sdk.IConnection"/> to use.</param>
            <param name="authenticator">The <see cref="T:Ingenico.Direct.Sdk.IAuthenticator"/> to use.</param>
            <param name="metaDataProvider">The <see cref="T:Ingenico.Direct.Sdk.MetaDataProvider"/> to use.</param>
            <param name="marshaller">The <see cref="T:Ingenico.Direct.Sdk.IMarshaller"/> to use.</param>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Factory.CreateClient(System.Uri,Ingenico.Direct.Sdk.IConnection,Ingenico.Direct.Sdk.IAuthenticator,Ingenico.Direct.Sdk.MetaDataProvider)">
            <summary>
            Creates a <see cref="T:Ingenico.Direct.Sdk.Client"/> based on the passed fields.
            </summary>
            <param name="apiEndpoint">The Ingenico ePayments platform API endpoint URI to use.</param>
            <param name="connection">The <see cref="T:Ingenico.Direct.Sdk.IConnection"/> to use.</param>
            <param name="authenticator">The <see cref="T:Ingenico.Direct.Sdk.IAuthenticator"/> to use.</param>
            <param name="metaDataProvider">The <see cref="T:Ingenico.Direct.Sdk.MetaDataProvider"/> to use.</param>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Factory.CreateClient(System.String,System.String,System.Uri,System.String)">
            <summary>
            Creates a <see cref="T:Ingenico.Direct.Sdk.Client"/> based on the configuration values in
            your <c>app.conf</c> or <c>web.conf</c> file,
            <c>apiKeyId</c> and <c>secretApiKey</c>.
            </summary>
            <param name="apiKeyId">The API key identifier.</param>
            <param name="secretApiKey">The secret API key.</param>
            <param name="apiEndpoint">The URI of the Direct API.</param>
            <param name="integrator">The integrator of the SDK.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Ingenico.Direct.Sdk.Factory.CreateClient(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)" -->
        <member name="M:Ingenico.Direct.Sdk.Factory.CreateClient(Ingenico.Direct.Sdk.CommunicatorConfiguration)">
            <summary>
            Creates a <see cref="T:Ingenico.Direct.Sdk.Client"/> based on the passed configuration.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Factory.CreateClient(Ingenico.Direct.Sdk.ICommunicator)">
            <summary>
            Creates a <see cref="T:Ingenico.Direct.Sdk.Client"/> based on the passed communicator.
            </summary>
            <param name="communicator">The shared communicator to use.</param>
        </member>
        <member name="T:Ingenico.Direct.Sdk.IAuthenticator">
            <summary>
            Used to sign requests to the Ingenico ePayments platform. Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.IAuthenticator.CreateSimpleAuthenticationSignature(System.Net.Http.HttpMethod,System.Uri,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader})">
            <summary>
            Creates a signature for the simple security model.
            </summary>
            <returns>The simple authentication signature.</returns>
            <param name="httpMethod">HTTP method.</param>
            <param name="resourceUri">Resource URI.</param>
            <param name="requestHeaders">A list of request headers.</param>
            <remarks>The list of Request headers may not be modified and may not contain headers with
            the same name.</remarks>
        </member>
        <member name="T:Ingenico.Direct.Sdk.IClient">
             <summary>
             Ingenico ePayments platform client. Thread-safe.
            
             This client and all its child clients are bound to one specific value for the <i>X-GCS-ClientMetaInfo</i> header.
             To get a new client with a different header value, use <see cref="M:Ingenico.Direct.Sdk.IClient.WithClientMetaInfo(System.String)"/>.
             </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.IClient.WithClientMetaInfo(System.String)">
            <summary>
            Returns a new Client which uses the passed meta data for the <i>X-GCS-ClientMetaInfo</i> header.
            </summary>
            <param name="clientMetaInfo">JSON string containing the meta data for the client</param>
            <exception cref="T:Ingenico.Direct.Sdk.MarshallerSyntaxException">if the given clientMetaInfo is not a valid JSON string</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.IClient.CloseExpiredConnections">
            <summary>
            Utility method that delegates the call to this client's communicator.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.IClient.CloseIdleConnections(System.TimeSpan)">
            <summary>
            Utility method that delegates the call to this client's communicator.
            </summary>
            <param name="timespan">Idle time.</param>
        </member>
        <member name="M:Ingenico.Direct.Sdk.IClient.WithNewMerchant(System.String)">
            <summary>
            Resource /v2/{merchantId}
            </summary>
            <param name="merchantId">string</param>
            <returns>MerchantClient</returns>
        </member>
        <member name="T:Ingenico.Direct.Sdk.ICommunicator">
            <summary>
            Used to communicate with the Ingenico ePayments platform web services.
            </summary>
            <remarks>
            It contains all the logic to transform a request object to a HTTP request and a HTTP response to a response object.
            It is also thread safe.
            </remarks>
        </member>
        <member name="M:Ingenico.Direct.Sdk.ICommunicator.Get``1(System.String,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},Ingenico.Direct.Sdk.AbstractParamRequest,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Corresponds to the HTTP Get method.
            </summary>
            <param name="relativePath">The path to call, relative to the base URI.</param>
            <param name="requestHeaders">An optional list of request headers.</param>
            <param name="requestParameters">The optional set of request parameters.</param>
            <param name="context">The optional call context to use</param>
            <typeparam name="T">Type of the response.</typeparam>
            <exception cref="T:Ingenico.Direct.Sdk.CommunicationException"> when an exception occurred communicating with the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ResponseException">when an error response was received from the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">when an error response was received from the Ingenico ePayments platform which contained a list of errors</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.ICommunicator.Get(System.String,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},Ingenico.Direct.Sdk.AbstractParamRequest,System.Action{System.IO.Stream,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IResponseHeader}},Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Corresponds to the HTTP Get method.
            </summary>
            <param name="relativePath">The path to call, relative to the base URI.</param>
            <param name="requestHeaders">An optional list of request headers.</param>
            <param name="requestParameters">The optional set of request parameters.</param>
            <param name="bodyHandler">A callback that receives the contents of the body as a stream</param>
            <param name="context">The optional call context to use</param>
            <exception cref="T:Ingenico.Direct.Sdk.CommunicationException"> when an exception occurred communicating with the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ResponseException">when an error response was received from the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">when an error response was received from the Ingenico ePayments platform which contained a list of errors</exception>
            <exception cref="T:Ingenico.Direct.Sdk.BodyHandlerException">when the BodyHandler throws an exception</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.ICommunicator.Delete``1(System.String,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},Ingenico.Direct.Sdk.AbstractParamRequest,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Corresponds to the HTTP DELETE method.
            </summary>
            <param name="relativePath">The path to call, relative to the base URI.</param>
            <param name="requestHeaders">An optional list of request headers.</param>
            <param name="requestParameters">The optional set of request parameters.</param>
            <param name="context">The optional call context to use</param>
            <typeparam name="T">Type of the response.</typeparam>
            <exception cref="T:Ingenico.Direct.Sdk.CommunicationException"> when an exception occurred communicating with the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ResponseException">when an error response was received from the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">when an error response was received from the Ingenico ePayments platform which contained a list of errors</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.ICommunicator.Delete(System.String,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},Ingenico.Direct.Sdk.AbstractParamRequest,System.Action{System.IO.Stream,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IResponseHeader}},Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Corresponds to the HTTP DELETE method.
            </summary>
            <param name="relativePath">The path to call, relative to the base URI.</param>
            <param name="requestHeaders">An optional list of request headers.</param>
            <param name="requestParameters">The optional set of request parameters.</param>
            <param name="bodyHandler">A callback that receives the contents of the body as a stream</param>
            <param name="context">The optional call context to use</param>
            <exception cref="T:Ingenico.Direct.Sdk.CommunicationException"> when an exception occurred communicating with the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ResponseException">when an error response was received from the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">when an error response was received from the Ingenico ePayments platform which contained a list of errors</exception>
            <exception cref="T:Ingenico.Direct.Sdk.BodyHandlerException">when the BodyHandler throws an exception</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.ICommunicator.Post``1(System.String,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},Ingenico.Direct.Sdk.AbstractParamRequest,System.Object,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Corresponds to the HTTP POST method.
            </summary>
            <param name="relativePath">The path to call, relative to the base URI.</param>
            <param name="requestHeaders">An optional list of request headers.</param>
            <param name="requestParameters">The optional set of request parameters.</param>
            <param name="requestBody">The optional request body to send.</param>
            <param name="context">The optional call context to use</param>
            <typeparam name="T">Type of the response.</typeparam>
            <exception cref="T:Ingenico.Direct.Sdk.CommunicationException"> when an exception occurred communicating with the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ResponseException">when an error response was received from the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">when an error response was received from the Ingenico ePayments platform which contained a list of errors</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.ICommunicator.Post(System.String,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},Ingenico.Direct.Sdk.AbstractParamRequest,System.Object,System.Action{System.IO.Stream,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IResponseHeader}},Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Corresponds to the HTTP POST method.
            </summary>
            <param name="relativePath">The path to call, relative to the base URI.</param>
            <param name="requestHeaders">An optional list of request headers.</param>
            <param name="requestParameters">The optional set of request parameters.</param>
            <param name="requestBody">The optional request body to send.</param>
            <param name="bodyHandler">A callback that receives the contents of the body as a stream</param>
            <param name="context">The optional call context to use</param>
            <exception cref="T:Ingenico.Direct.Sdk.CommunicationException"> when an exception occurred communicating with the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ResponseException">when an error response was received from the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">when an error response was received from the Ingenico ePayments platform which contained a list of errors</exception>
            <exception cref="T:Ingenico.Direct.Sdk.BodyHandlerException">when the BodyHandler throws an exception</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.ICommunicator.Put``1(System.String,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},Ingenico.Direct.Sdk.AbstractParamRequest,System.Object,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Corresponds to the HTTP PUT method.
            </summary>
            <param name="relativePath">The path to call, relative to the base URI.</param>
            <param name="requestHeaders">An optional list of request headers.</param>
            <param name="requestParameters">The optional set of request parameters.</param>
            <param name="requestBody">The optional request body to send.</param>
            <param name="context">The optional call context to use</param>
            <typeparam name="T">Type of the response.</typeparam>
            <exception cref="T:Ingenico.Direct.Sdk.CommunicationException"> when an exception occurred communicating with the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ResponseException">when an error response was received from the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">when an error response was received from the Ingenico ePayments platform which contained a list of errors</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.ICommunicator.Put(System.String,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},Ingenico.Direct.Sdk.AbstractParamRequest,System.Object,System.Action{System.IO.Stream,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IResponseHeader}},Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Corresponds to the HTTP PUT method.
            </summary>
            <param name="relativePath">The path to call, relative to the base URI.</param>
            <param name="requestHeaders">An optional list of request headers.</param>
            <param name="requestParameters">The optional set of request parameters.</param>
            <param name="requestBody">The optional request body to send.</param>
            <param name="bodyHandler">A callback that receives the contents of the body as a stream</param>
            <param name="context">The optional call context to use</param>
            <exception cref="T:Ingenico.Direct.Sdk.CommunicationException"> when an exception occurred communicating with the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ResponseException">when an error response was received from the Ingenico ePayments platform</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">when an error response was received from the Ingenico ePayments platform which contained a list of errors</exception>
            <exception cref="T:Ingenico.Direct.Sdk.BodyHandlerException">when the BodyHandler throws an exception</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.ICommunicator.Unmarshal``1(System.String)">
            <summary>
            Unmarshal a JSON string to a response object.
            </summary>
            <param name="responseJson">The JSON that will be parsed.</param>
            <typeparam name="T">The response type.</typeparam>
            <exception cref="T:Ingenico.Direct.Sdk.MarshallerSyntaxException">if the JSON is not a valid representation for an object of the given type</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.ICommunicator.CloseExpiredConnections">
            <summary>
            Utility method that delegates the call to this communicator's session's connection if that's an instance of <see cref="T:Ingenico.Direct.Sdk.IPooledConnection"/>.
            If not this method does nothing.
            <seealso cref="M:Ingenico.Direct.Sdk.IPooledConnection.CloseExpiredConnections"/>
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.ICommunicator.CloseIdleConnections(System.TimeSpan)">
            <summary>
            Utility method that delegates the call to this communicator's session's connection if that's an instance of
            <see cref="T:Ingenico.Direct.Sdk.IPooledConnection"/>.
            </summary>
            <param name="timespan">Idle time.</param>
        </member>
        <member name="T:Ingenico.Direct.Sdk.IConnection">
            <summary>
            Represents a connection to the Ingenico ePayments platform server. Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.IConnection.Get``1(System.Uri,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},System.Func{System.Net.HttpStatusCode,System.IO.Stream,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IResponseHeader},``0})">
            <summary>
            Send a GET request to the Ingenico ePayments platform.
            </summary>
            <param name="uri">The URI to call, including any necessary query parameters.</param>
            <param name="requestHeaders">An optional list of request headers.</param>
            <param name="responseHandler">A callback that handles the stream from the response</param>
            <returns>Returns the object that was returned from the callback</returns>
            <exception cref="T:Ingenico.Direct.Sdk.CommunicationException">when an exception occurred communicating with the Ingenico ePayments platform</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.IConnection.Delete``1(System.Uri,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},System.Func{System.Net.HttpStatusCode,System.IO.Stream,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IResponseHeader},``0})">
            <summary>
            Send a DELETE request to the Ingenico ePayments platform.
            </summary>
            <param name="uri">The URI to call, including any necessary query parameters.</param>
            <param name="requestHeaders">An optional list of request headers.</param>
            <param name="responseHandler">A callback that handles the stream from the response</param>
            <returns>Returns the object that was returned from the callback</returns>
            <exception cref="T:Ingenico.Direct.Sdk.CommunicationException">when an exception occurred communicating with the Ingenico ePayments platform</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.IConnection.Post``1(System.Uri,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},System.String,System.Func{System.Net.HttpStatusCode,System.IO.Stream,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IResponseHeader},``0})">
            <summary>
            Send a POST request to the Ingenico ePayments platform.
            </summary>
            <param name="uri">The URI to call, including any necessary query parameters.</param>
            <param name="requestHeaders">An optional list of request headers.</param>
            <param name="body">The optional body to send.</param>
            <param name="responseHandler">A callback that handles the stream from the response</param>
            <returns>Returns the object that was returned from the callback</returns>
            <exception cref="T:Ingenico.Direct.Sdk.CommunicationException">when an exception occurred communicating with the Ingenico ePayments platform</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.IConnection.Post``1(System.Uri,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},Ingenico.Direct.Sdk.MultipartFormDataObject,System.Func{System.Net.HttpStatusCode,System.IO.Stream,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IResponseHeader},``0})">
             <summary>
             Send a multipart/form-data POST request to the Ingenico ePayments platform.
            
             The content type of the request will be be part of the given request header list.
             If the connection creates its own content type, it should be multipart.getContentType().
             Otherwise, authentication failures will occur.
             </summary>
             <param name="uri">The URI to call, including any necessary query parameters.</param>
             <param name="requestHeaders">An optional list of request headers.</param>
             <param name="multipart">The multipart/form-data request to send.</param>
             <param name="responseHandler">A callback that handles the stream from the response</param>
             <returns>Returns the object that was returned from the callback</returns>
             <exception cref="T:Ingenico.Direct.Sdk.CommunicationException">when an exception occurred communicating with the Ingenico ePayments platform</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.IConnection.Put``1(System.Uri,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},System.String,System.Func{System.Net.HttpStatusCode,System.IO.Stream,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IResponseHeader},``0})">
            <summary>
            Send a PUT request to the Ingenico ePayments platform.
            </summary>
            <param name="uri">The URI to call, including any necessary query parameters.</param>
            <param name="requestHeaders">An optional list of request headers.</param>
            <param name="responseHandler">A callback that handles the stream from the response</param>
            <returns>Returns the object that was returned from the callback</returns>
            <param name="body">The optional body to send.</param>
            <exception cref="T:Ingenico.Direct.Sdk.CommunicationException">when an exception occurred communicating with the Ingenico ePayments platform</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.IConnection.Put``1(System.Uri,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader},Ingenico.Direct.Sdk.MultipartFormDataObject,System.Func{System.Net.HttpStatusCode,System.IO.Stream,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IResponseHeader},``0})">
             <summary>
             Send a multipart/form-data PUT request to the Ingenico ePayments platform.
            
             The content type of the request will be be part of the given request header list.
             If the connection creates its own content type, it should be multipart.getContentType().
             Otherwise, authentication failures will occur.
             </summary>
             <param name="uri">The URI to call, including any necessary query parameters.</param>
             <param name="requestHeaders">An optional list of request headers.</param>
             <param name="multipart">The multipart/form-data request to send.</param>
             <param name="responseHandler">A callback that handles the stream from the response</param>
             <returns>Returns the object that was returned from the callback</returns>
             <exception cref="T:Ingenico.Direct.Sdk.CommunicationException">when an exception occurred communicating with the Ingenico ePayments platform</exception>
        </member>
        <member name="T:Ingenico.Direct.Sdk.IdempotenceException">
            <summary>
            Represents an error response from the Ingenico ePayments platform when an idempotent request failed because the first request has not finished yet.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.IdempotenceException.IdempotenceKey">
            <summary>
            Gets the key that was used for the idempotent request.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.IdempotenceException.IdempotenceRequestTimestamp">
            <summary>
            Gets the request timestamp of the first idempotent request with the same key.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.IMarshaller">
            <summary>
            Used to marshal and unmarshal Ingenico ePayments platform request and response objects to and from JSON. Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.IMarshaller.Marshal(System.Object)">
            <summary>
            Marshal a request object to a JSON string.
            </summary>
            <param name="requestObject">The request object.</param>
        </member>
        <member name="M:Ingenico.Direct.Sdk.IMarshaller.Unmarshal``1(System.String)">
            <summary>
            Unmarshal a JSON string to a response object.
            </summary>
            <param name="responseJson">The JSON that will be parsed.</param>
            <typeparam name="T">The response type.</typeparam>
            <exception cref="T:Ingenico.Direct.Sdk.MarshallerSyntaxException">if the JSON is not a valid representation for an object of the given type</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.IMarshaller.Unmarshal``1(System.IO.Stream)">
            <summary>
            Unmarshal JSON from a stream to a response object.
            </summary>
            <param name="responseJson">The stream containing a valid JSON string.</param>
            <typeparam name="T">The response type.</typeparam>
            <exception cref="T:Ingenico.Direct.Sdk.MarshallerSyntaxException">if the JSON is not a valid representation for an object of the given type</exception>
        </member>
        <member name="T:Ingenico.Direct.Sdk.IMultipartFormDataRequest">
            <summary>
            A representation of a multipart/form-data request.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.IPooledConnection">
            <summary>
            Represents a pooled connection to the Ingenico ePayments platform server.
            Instead of setting up a new HTTP connection for each request, this
            connection uses a pool of HTTP connections.
            Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.IPooledConnection.CloseIdleConnections(System.TimeSpan)">
            <summary>
            Closes all HTTP connections that have been idle for the specified time. This should also include all expired HTTP connections. <see cref="M:Ingenico.Direct.Sdk.IPooledConnection.CloseExpiredConnections"/>
            </summary>
            <param name="timespan">Idle time.</param>
        </member>
        <member name="M:Ingenico.Direct.Sdk.IPooledConnection.CloseExpiredConnections">
            <summary>
            Closes all expired HTTP connections.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.IRequestHeader">
            <summary>
            A single request header. Immutable.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.IRequestHeader.Name">
            <summary>
            Gets the name of the header.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.IRequestHeader.Value">
            <summary>
            Gets the un-encoded value of the header.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.IResponseHeader">
            <summary>
            A single response header. Immutable.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.IResponseHeader.Name">
            <summary>
            Gets the name of the header.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.IResponseHeader.Value">
            <summary>
            Gets the un-encoded value of the header.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Logging.ICommunicatorLogger">
            <summary>
            Used to log messages from communicators. Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Logging.ICommunicatorLogger.Log(System.String)">
            <summary>
            Log the specified message.
            </summary>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Logging.ICommunicatorLogger.Log(System.String,System.Exception)">
            <summary>
            Logs a throwable with an accompanying message.
            </summary>
            <param name="message">Message accompanying the throwable.</param>
            <param name="thrown">The throwable to log.</param>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Logging.ILoggingCapable">
            <summary>
            Classes that implement this interface have support for logging messages from communicators.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Logging.ILoggingCapable.EnableLogging(Ingenico.Direct.Sdk.Logging.ICommunicatorLogger)">
            <summary>
            Turns on logging using the given communicator logger.
            </summary>
            <param name="communicatorLogger">The given communicator logger.</param>
            <exception cref="T:System.ArgumentException">If the given communicator logger is <c>null</c>.</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Logging.ILoggingCapable.DisableLogging">
            <summary>
            Turns off logging.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Logging.LoggingUtil">
            <summary>
            A utility class to support logging.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Logging.LoggingUtil.ObfuscateBody(System.String)">
            <summary>
            Obfuscates the given body as necessary.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Logging.LoggingUtil.ObfuscateHeader(System.String,System.String)">
            <summary>
            Obfuscates the value for the given header as necessary.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Logging.LogMessageBuilder">
            <summary>
            A utility class to build log messages.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Logging.NLogCommunicatorLogger">
            <summary>
            A communicator logger that is backed by an <see cref="T:NLog.ILogger"/>.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Logging.NLogCommunicatorLogger.#ctor(NLog.ILogger,NLog.LogLevel)">
            <summary>
            Creates a new communicator logger.
            </summary>
            <param name="logger">The backing logger.</param>
            <param name="level">The level to use when logging through both <see cref="M:Ingenico.Direct.Sdk.Logging.NLogCommunicatorLogger.Log(System.String)"/> abd <see cref="M:Ingenico.Direct.Sdk.Logging.NLogCommunicatorLogger.Log(System.String,System.Exception)"/>.</param>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Logging.NLogCommunicatorLogger.#ctor(NLog.ILogger,NLog.LogLevel,NLog.LogLevel)">
            <summary>
            Creates a new communicator logger.
            </summary>
            <param name="logger">The backing logger.</param>
            <param name="logLevel">The level to use when logging through <see cref="M:Ingenico.Direct.Sdk.Logging.NLogCommunicatorLogger.Log(System.String)"/></param>
            <param name="errorLogLevel">The level to use when logging through <see cref="M:Ingenico.Direct.Sdk.Logging.NLogCommunicatorLogger.Log(System.String,System.Exception)"/></param>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Logging.RequestLogMessageBuilder">
            <summary>
            A utility class to build request log messages.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Logging.ResponseLogMessageBuilder">
            <summary>
            A utility class to build response log messages.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Logging.SystemConsoleCommunicatorLogger">
            <summary>
            A communicator logger that prints its message to the <see cref="T:System.Console"/>.
            It includes a timestamp in yyyy-MM-ddTHH:mm:ss format in the system time zone.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.MarshallerSyntaxException">
            <summary>
            Thrown when a JSON string cannot be converted to a response object.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.HostedCheckout.HostedCheckoutClient">
            <summary>
            HostedCheckout client. Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.HostedCheckout.HostedCheckoutClient.CreateHostedCheckout(Ingenico.Direct.Sdk.Domain.CreateHostedCheckoutRequest,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/hostedcheckouts
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/CreateHostedCheckoutApi">Create hosted checkout</a>
            </summary>
            <param name="body">CreateHostedCheckoutRequest</param>
            <param name="context">CallContext</param>
            <returns>CreateHostedCheckoutResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.HostedCheckout.HostedCheckoutClient.GetHostedCheckout(System.String,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/hostedcheckouts/{hostedCheckoutId}
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetHostedCheckoutApi">Get hosted checkout status</a>
            </summary>
            <param name="hostedCheckoutId">string</param>
            <param name="context">CallContext</param>
            <returns>GetHostedCheckoutResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.HostedCheckout.IHostedCheckoutClient">
            <summary>
            HostedCheckout client. Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.HostedCheckout.IHostedCheckoutClient.CreateHostedCheckout(Ingenico.Direct.Sdk.Domain.CreateHostedCheckoutRequest,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/hostedcheckouts
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/CreateHostedCheckoutApi">Create hosted checkout</a>
            </summary>
            <param name="body">CreateHostedCheckoutRequest</param>
            <param name="context">CallContext</param>
            <returns>CreateHostedCheckoutResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.HostedCheckout.IHostedCheckoutClient.GetHostedCheckout(System.String,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/hostedcheckouts/{hostedCheckoutId}
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetHostedCheckoutApi">Get hosted checkout status</a>
            </summary>
            <param name="hostedCheckoutId">string</param>
            <param name="context">CallContext</param>
            <returns>GetHostedCheckoutResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.IMerchantClient">
            <summary>
            Merchant client. Thread-safe.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.Merchant.IMerchantClient.Products">
            <summary>
            Resource /v2/{merchantId}/products
            </summary>
            <returns>ProductsClient</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.IMerchantClient.WithNewTokens(System.String)">
            <summary>
            Resource /v2/{merchantId}/tokens/{tokenId}
            </summary>
            <param name="tokenId">string</param>
            <returns>TokensClient</returns>
        </member>
        <member name="P:Ingenico.Direct.Sdk.Merchant.IMerchantClient.Sessions">
            <summary>
            Resource /v2/{merchantId}/sessions
            </summary>
            <returns>SessionsClient</returns>
        </member>
        <member name="P:Ingenico.Direct.Sdk.Merchant.IMerchantClient.Payments">
            <summary>
            Resource /v2/{merchantId}/payments
            </summary>
            <returns>PaymentsClient</returns>
        </member>
        <member name="P:Ingenico.Direct.Sdk.Merchant.IMerchantClient.Services">
            <summary>
            Resource /v2/{merchantId}/services/testconnection
            </summary>
            <returns>ServicesClient</returns>
        </member>
        <member name="P:Ingenico.Direct.Sdk.Merchant.IMerchantClient.ProductGroups">
            <summary>
            Resource /v2/{merchantId}/productgroups
            </summary>
            <returns>ProductGroupsClient</returns>
        </member>
        <member name="P:Ingenico.Direct.Sdk.Merchant.IMerchantClient.HostedCheckout">
            <summary>
            Resource /v2/{merchantId}/hostedcheckouts
            </summary>
            <returns>HostedCheckoutClient</returns>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.MerchantClient">
            <summary>
            Merchant client. Thread-safe.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.Merchant.MerchantClient.Products">
            <summary>
            Resource /v2/{merchantId}/products
            </summary>
            <returns>ProductsClient</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.MerchantClient.WithNewTokens(System.String)">
            <summary>
            Resource /v2/{merchantId}/tokens/{tokenId}
            </summary>
            <param name="tokenId">string</param>
            <returns>TokensClient</returns>
        </member>
        <member name="P:Ingenico.Direct.Sdk.Merchant.MerchantClient.Sessions">
            <summary>
            Resource /v2/{merchantId}/sessions
            </summary>
            <returns>SessionsClient</returns>
        </member>
        <member name="P:Ingenico.Direct.Sdk.Merchant.MerchantClient.Payments">
            <summary>
            Resource /v2/{merchantId}/payments
            </summary>
            <returns>PaymentsClient</returns>
        </member>
        <member name="P:Ingenico.Direct.Sdk.Merchant.MerchantClient.Services">
            <summary>
            Resource /v2/{merchantId}/services/testconnection
            </summary>
            <returns>ServicesClient</returns>
        </member>
        <member name="P:Ingenico.Direct.Sdk.Merchant.MerchantClient.ProductGroups">
            <summary>
            Resource /v2/{merchantId}/productgroups
            </summary>
            <returns>ProductGroupsClient</returns>
        </member>
        <member name="P:Ingenico.Direct.Sdk.Merchant.MerchantClient.HostedCheckout">
            <summary>
            Resource /v2/{merchantId}/hostedcheckouts
            </summary>
            <returns>HostedCheckoutClient</returns>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.Payments.IPaymentsClient">
            <summary>
            Payments client. Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Payments.IPaymentsClient.CreatePayment(Ingenico.Direct.Sdk.Domain.CreatePaymentRequest,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/payments
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/CreatePaymentApi">Create payment</a>
            </summary>
            <param name="body">CreatePaymentRequest</param>
            <param name="context">CallContext</param>
            <returns>CreatePaymentResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.DeclinedPaymentException">if the Ingenico ePayments platform declined / rejected the payment. The payment result will be available from the exception.</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Payments.IPaymentsClient.GetPayment(System.String,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/payments/{paymentId}
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetPaymentApi">Get payment</a>
            </summary>
            <param name="paymentId">string</param>
            <param name="context">CallContext</param>
            <returns>PaymentResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Payments.IPaymentsClient.CompletePayment(System.String,Ingenico.Direct.Sdk.Domain.CompletePaymentRequest,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/payments/{paymentId}/complete
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/CompletePaymentApi">Complete payment</a>
            </summary>
            <param name="paymentId">string</param>
            <param name="body">CompletePaymentRequest</param>
            <param name="context">CallContext</param>
            <returns>CompletePaymentResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.DeclinedPaymentException">if the Ingenico ePayments platform declined / rejected the payment. The payment result will be available from the exception.</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Payments.IPaymentsClient.CancelPayment(System.String,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/payments/{paymentId}/cancel
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/CancelPaymentApi">Cancel payment</a>
            </summary>
            <param name="paymentId">string</param>
            <param name="context">CallContext</param>
            <returns>CancelPaymentResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Payments.IPaymentsClient.RefundPayment(System.String,Ingenico.Direct.Sdk.Domain.RefundRequest,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/payments/{paymentId}/refund
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/RefundPaymentApi">Refund payment</a>
            </summary>
            <param name="paymentId">string</param>
            <param name="body">RefundRequest</param>
            <param name="context">CallContext</param>
            <returns>RefundResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.DeclinedRefundException">if the Ingenico ePayments platform declined / rejected the refund. The refund result will be available from the exception.</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Payments.IPaymentsClient.CapturePayment(System.String,Ingenico.Direct.Sdk.Domain.CapturePaymentRequest,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/payments/{paymentId}/capture
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/CapturePaymentApi">Capture payment</a>
            </summary>
            <param name="paymentId">string</param>
            <param name="body">CapturePaymentRequest</param>
            <param name="context">CallContext</param>
            <returns>CaptureResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Payments.IPaymentsClient.GetCaptures(System.String,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/payments/{paymentId}/captures
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetCapturesApi">Get Captures Api</a>
            </summary>
            <param name="paymentId">string</param>
            <param name="context">CallContext</param>
            <returns>CapturesResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Payments.IPaymentsClient.GetRefunds(System.String,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/payments/{paymentId}/refunds
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetRefundsApi">Get Refunds Api</a>
            </summary>
            <param name="paymentId">string</param>
            <param name="context">CallContext</param>
            <returns>RefundsResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.Payments.PaymentsClient">
            <summary>
            Payments client. Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Payments.PaymentsClient.CreatePayment(Ingenico.Direct.Sdk.Domain.CreatePaymentRequest,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/payments
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/CreatePaymentApi">Create payment</a>
            </summary>
            <param name="body">CreatePaymentRequest</param>
            <param name="context">CallContext</param>
            <returns>CreatePaymentResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.DeclinedPaymentException">if the Ingenico ePayments platform declined / rejected the payment. The payment result will be available from the exception.</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Payments.PaymentsClient.GetPayment(System.String,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/payments/{paymentId}
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetPaymentApi">Get payment</a>
            </summary>
            <param name="paymentId">string</param>
            <param name="context">CallContext</param>
            <returns>PaymentResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Payments.PaymentsClient.CompletePayment(System.String,Ingenico.Direct.Sdk.Domain.CompletePaymentRequest,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/payments/{paymentId}/complete
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/CompletePaymentApi">Complete payment</a>
            </summary>
            <param name="paymentId">string</param>
            <param name="body">CompletePaymentRequest</param>
            <param name="context">CallContext</param>
            <returns>CompletePaymentResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.DeclinedPaymentException">if the Ingenico ePayments platform declined / rejected the payment. The payment result will be available from the exception.</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Payments.PaymentsClient.CancelPayment(System.String,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/payments/{paymentId}/cancel
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/CancelPaymentApi">Cancel payment</a>
            </summary>
            <param name="paymentId">string</param>
            <param name="context">CallContext</param>
            <returns>CancelPaymentResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Payments.PaymentsClient.RefundPayment(System.String,Ingenico.Direct.Sdk.Domain.RefundRequest,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/payments/{paymentId}/refund
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/RefundPaymentApi">Refund payment</a>
            </summary>
            <param name="paymentId">string</param>
            <param name="body">RefundRequest</param>
            <param name="context">CallContext</param>
            <returns>RefundResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.DeclinedRefundException">if the Ingenico ePayments platform declined / rejected the refund. The refund result will be available from the exception.</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Payments.PaymentsClient.CapturePayment(System.String,Ingenico.Direct.Sdk.Domain.CapturePaymentRequest,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/payments/{paymentId}/capture
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/CapturePaymentApi">Capture payment</a>
            </summary>
            <param name="paymentId">string</param>
            <param name="body">CapturePaymentRequest</param>
            <param name="context">CallContext</param>
            <returns>CaptureResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Payments.PaymentsClient.GetCaptures(System.String,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/payments/{paymentId}/captures
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetCapturesApi">Get Captures Api</a>
            </summary>
            <param name="paymentId">string</param>
            <param name="context">CallContext</param>
            <returns>CapturesResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Payments.PaymentsClient.GetRefunds(System.String,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/payments/{paymentId}/refunds
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetRefundsApi">Get Refunds Api</a>
            </summary>
            <param name="paymentId">string</param>
            <param name="context">CallContext</param>
            <returns>RefundsResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.ProductGroups.GetProductGroupParams">
            <summary>
            Query parameters for
            <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetProductGroup">Get product group</a>
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.ProductGroups.GetProductGroupsParams">
            <summary>
            Query parameters for
            <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetProductGroups">Get product groups</a>
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.ProductGroups.IProductGroupsClient">
            <summary>
            ProductGroups client. Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.ProductGroups.IProductGroupsClient.GetProductGroups(Ingenico.Direct.Sdk.Merchant.ProductGroups.GetProductGroupsParams,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/productgroups
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetProductGroups">Get product groups</a>
            </summary>
            <param name="query">GetProductGroupsParams</param>
            <param name="context">CallContext</param>
            <returns>GetPaymentProductGroupsResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.ProductGroups.IProductGroupsClient.GetProductGroup(System.String,Ingenico.Direct.Sdk.Merchant.ProductGroups.GetProductGroupParams,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/productgroups/{paymentProductGroupId}
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetProductGroup">Get product group</a>
            </summary>
            <param name="paymentProductGroupId">string</param>
            <param name="query">GetProductGroupParams</param>
            <param name="context">CallContext</param>
            <returns>PaymentProductGroup</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.ProductGroups.ProductGroupsClient">
            <summary>
            ProductGroups client. Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.ProductGroups.ProductGroupsClient.GetProductGroups(Ingenico.Direct.Sdk.Merchant.ProductGroups.GetProductGroupsParams,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/productgroups
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetProductGroups">Get product groups</a>
            </summary>
            <param name="query">GetProductGroupsParams</param>
            <param name="context">CallContext</param>
            <returns>GetPaymentProductGroupsResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.ProductGroups.ProductGroupsClient.GetProductGroup(System.String,Ingenico.Direct.Sdk.Merchant.ProductGroups.GetProductGroupParams,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/productgroups/{paymentProductGroupId}
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetProductGroup">Get product group</a>
            </summary>
            <param name="paymentProductGroupId">string</param>
            <param name="query">GetProductGroupParams</param>
            <param name="context">CallContext</param>
            <returns>PaymentProductGroup</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.Products.GetPaymentProductNetworksParams">
            <summary>
            Query parameters for
            <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetPaymentProductNetworks">Get payment product networks</a>
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.Products.GetPaymentProductParams">
            <summary>
            Query parameters for
            <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetPaymentProduct">Get payment product</a>
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.Products.GetPaymentProductsParams">
            <summary>
            Query parameters for
            <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetPaymentProducts">Get payment products</a>
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.Products.GetProductDirectoryParams">
            <summary>
            Query parameters for
            <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetProductDirectoryApi">Get payment product directory</a>
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.Products.IProductsClient">
            <summary>
            Products client. Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Products.IProductsClient.GetPaymentProducts(Ingenico.Direct.Sdk.Merchant.Products.GetPaymentProductsParams,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/products
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetPaymentProducts">Get payment products</a>
            </summary>
            <param name="query">GetPaymentProductsParams</param>
            <param name="context">CallContext</param>
            <returns>GetPaymentProductsResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Products.IProductsClient.GetPaymentProduct(System.Nullable{System.Int32},Ingenico.Direct.Sdk.Merchant.Products.GetPaymentProductParams,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/products/{paymentProductId}
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetPaymentProduct">Get payment product</a>
            </summary>
            <param name="paymentProductId">int?</param>
            <param name="query">GetPaymentProductParams</param>
            <param name="context">CallContext</param>
            <returns>PaymentProduct</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Products.IProductsClient.GetProductDirectory(System.Nullable{System.Int32},Ingenico.Direct.Sdk.Merchant.Products.GetProductDirectoryParams,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/products/{paymentProductId}/directory
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetProductDirectoryApi">Get payment product directory</a>
            </summary>
            <param name="paymentProductId">int?</param>
            <param name="query">GetProductDirectoryParams</param>
            <param name="context">CallContext</param>
            <returns>ProductDirectory</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Products.IProductsClient.GetPaymentProductNetworks(System.Nullable{System.Int32},Ingenico.Direct.Sdk.Merchant.Products.GetPaymentProductNetworksParams,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/products/{paymentProductId}/networks
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetPaymentProductNetworks">Get payment product networks</a>
            </summary>
            <param name="paymentProductId">int?</param>
            <param name="query">GetPaymentProductNetworksParams</param>
            <param name="context">CallContext</param>
            <returns>PaymentProductNetworksResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.Products.ProductsClient">
            <summary>
            Products client. Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Products.ProductsClient.GetPaymentProducts(Ingenico.Direct.Sdk.Merchant.Products.GetPaymentProductsParams,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/products
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetPaymentProducts">Get payment products</a>
            </summary>
            <param name="query">GetPaymentProductsParams</param>
            <param name="context">CallContext</param>
            <returns>GetPaymentProductsResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Products.ProductsClient.GetPaymentProduct(System.Nullable{System.Int32},Ingenico.Direct.Sdk.Merchant.Products.GetPaymentProductParams,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/products/{paymentProductId}
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetPaymentProduct">Get payment product</a>
            </summary>
            <param name="paymentProductId">int?</param>
            <param name="query">GetPaymentProductParams</param>
            <param name="context">CallContext</param>
            <returns>PaymentProduct</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Products.ProductsClient.GetProductDirectory(System.Nullable{System.Int32},Ingenico.Direct.Sdk.Merchant.Products.GetProductDirectoryParams,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/products/{paymentProductId}/directory
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetProductDirectoryApi">Get payment product directory</a>
            </summary>
            <param name="paymentProductId">int?</param>
            <param name="query">GetProductDirectoryParams</param>
            <param name="context">CallContext</param>
            <returns>ProductDirectory</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Products.ProductsClient.GetPaymentProductNetworks(System.Nullable{System.Int32},Ingenico.Direct.Sdk.Merchant.Products.GetPaymentProductNetworksParams,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/products/{paymentProductId}/networks
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetPaymentProductNetworks">Get payment product networks</a>
            </summary>
            <param name="paymentProductId">int?</param>
            <param name="query">GetPaymentProductNetworksParams</param>
            <param name="context">CallContext</param>
            <returns>PaymentProductNetworksResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.Services.IServicesClient">
            <summary>
            Services client. Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Services.IServicesClient.TestConnection(Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/services/testconnection
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/TestConnectionApi">Test connection</a>
            </summary>
            <param name="context">CallContext</param>
            <returns>TestConnection</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.Services.ServicesClient">
            <summary>
            Services client. Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Services.ServicesClient.TestConnection(Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/services/testconnection
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/TestConnectionApi">Test connection</a>
            </summary>
            <param name="context">CallContext</param>
            <returns>TestConnection</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.Sessions.ISessionsClient">
            <summary>
            Sessions client. Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Sessions.ISessionsClient.CreateSession(Ingenico.Direct.Sdk.Domain.SessionRequest,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/sessions
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/CreateSessionApi">Create session</a>
            </summary>
            <param name="body">SessionRequest</param>
            <param name="context">CallContext</param>
            <returns>SessionResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.Sessions.SessionsClient">
            <summary>
            Sessions client. Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Sessions.SessionsClient.CreateSession(Ingenico.Direct.Sdk.Domain.SessionRequest,Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/sessions
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/CreateSessionApi">Create session</a>
            </summary>
            <param name="body">SessionRequest</param>
            <param name="context">CallContext</param>
            <returns>SessionResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.Tokens.ITokensClient">
            <summary>
            Tokens client. Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Tokens.ITokensClient.GetToken(Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/tokens/{tokenId}
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetTokenApi">Get token</a>
            </summary>
            <param name="context">CallContext</param>
            <returns>TokenResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Tokens.ITokensClient.DeleteToken(Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/tokens/{tokenId}
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/DeleteTokenApi">Delete token</a>
            </summary>
            <param name="context">CallContext</param>
            <returns>TokenResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Merchant.Tokens.TokensClient">
            <summary>
            Tokens client. Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Tokens.TokensClient.GetToken(Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/tokens/{tokenId}
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/GetTokenApi">Get token</a>
            </summary>
            <param name="context">CallContext</param>
            <returns>TokenResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Merchant.Tokens.TokensClient.DeleteToken(Ingenico.Direct.Sdk.CallContext)">
            <summary>
            Resource /v2/{merchantId}/tokens/{tokenId}
            - <a href="https://support.direct.ingenico.com/documentation/api/reference/index.html#operation/DeleteTokenApi">Delete token</a>
            </summary>
            <param name="context">CallContext</param>
            <returns>TokenResponse</returns>
            <exception cref="T:Ingenico.Direct.Sdk.ValidationException">if the request was not correct and couldn't be processed (HTTP status code BadRequest)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.AuthorizationException">if the request was not allowed (HTTP status code Forbidden)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.IdempotenceException">if an idempotent request caused a conflict (HTTP status code Conflict)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ReferenceException">if an object was attempted to be referenced that doesn't exist or has been removed,
                       or there was a conflict (HTTP status code NotFound, Conflict or Gone)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.DirectException">if something went wrong at the Ingenico ePayments platform,
                       the Ingenico ePayments platform was unable to process a message from a downstream partner/acquirer,
                       or the service that you're trying to reach is temporary unavailable (HTTP status code InternalServerError, BadGateway or ServiceUnavailable)</exception>
            <exception cref="T:Ingenico.Direct.Sdk.ApiException">if the Ingenico ePayments platform returned any other error</exception>
        </member>
        <member name="T:Ingenico.Direct.Sdk.MetaDataProvider">
            <summary>
            Provides meta info about the server. Thread-safe.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.MetaDataProvider.ServerMetaDataHeaders">
            <summary>
            Gets the server related headers containing the metadata to be associated with the request (if any).
            This will always contain at least an automatically generated header <c>X-GCS-ServerMetaInfo</c>.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.MetaDataProviderBuilder">
            <summary>
            Builder for a <see cref="T:Ingenico.Direct.Sdk.MetaDataProvider"/> object.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.MetaDataProviderBuilder.#ctor(System.String)">
            <param name="integrator">The integrator to use.</param>
        </member>
        <member name="P:Ingenico.Direct.Sdk.MetaDataProviderBuilder.Integrator">
            <summary>
            Gets or sets the integrator to use.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.MetaDataProviderBuilder.ShoppingCartExtension">
            <summary>
            Gets or sets the shopping cart extension to use.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.MetaDataProviderBuilder.AdditionalRequestHeaders">
            <summary>
            Gets or sets the additional request headers.
            The following names are prohibited in these additional request headers, because these will be set automatically
            as needed:
            <list>
            <item><description>X-GCS-ServerMetaInfo</description></item>
            <item><description>X-GCS-ClientMetaInfo</description></item>
            <item><description>X-GCS-Idempotence-Key</description></item>
            <item><description>Date</description></item>
            <item><description>Content-Type</description></item>
            <item><description>Authorization</description></item>
            </list>
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.MetaDataProviderBuilder.WithShoppingCartExtension(Ingenico.Direct.Sdk.ShoppingCartExtension)">
            <summary>
            Sets the shopping cart extension to use.
            </summary>
            <returns>This.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.MetaDataProviderBuilder.WithAdditionalRequestHeader(Ingenico.Direct.Sdk.RequestHeader)">
            <summary>
            Adds an additional request header.
            The following names are prohibited in these additional request headers, because these will be set automatically
            as needed:
            <list>
            <item><description>X-GCS-ServerMetaInfo</description></item>
            <item><description>X-GCS-ClientMetaInfo</description></item>
            <item><description>X-GCS-Idempotence-Key</description></item>
            <item><description>Date</description></item>
            <item><description>Content-Type</description></item>
            <item><description>Authorization</description></item>
            </list>
            </summary>
            <returns>This.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.MetaDataProviderBuilder.Build">
            <summary>
            Creates a fully initialized <see cref="T:Ingenico.Direct.Sdk.MetaDataProvider"/> object.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.MultipartFormDataObject">
            <summary>
            A representation of a multipart/form-data object.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.NotFoundException">
            <summary>
            Indicates an exception that occurs when the requested resource is not found.
            In normal usage of the SDK, this exception should not occur, however it is possible.
            For example when path parameters are set with invalid values.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Proxy">
            <summary>
            Represents a proxy with a URI and it's authentication.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.ProxyConfiguration.#ctor">
            <summary>
            Initializes an empty ProxyConfiguration (possibly invalid)
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.ReferenceException">
            <summary>
            Represents an error response from the Ingenico ePayments platform when a non-existing or removed object is trying to be accessed.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.RequestHeader">
            <summary>
            A single request header. Immutable.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.RequestParam">
            <summary>
            A single request parameter. Immutable.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.RequestParam.Name">
            <summary>
            Gets the parameter name.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.RequestParam.Value">
            <summary>
            Gets the un-encoded value.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.ResponseException">
            <summary>
            Thrown when a response was received from the Ingenico ePayments platform which indicates an error.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.ResponseException.StatusCode">
            <summary>
            Gets the HTTP status code that was returned by the Ingenico ePayments platform.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.ResponseException.Body">
            <summary>
            Gets the raw response body that was returned by the Ingenico ePayments platform.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.ResponseException.Headers">
            <summary>
            Gets the headers that were returned by the Ingenico ePayments platform.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.ResponseException.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Ingenico.Direct.Sdk.ResponseException"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Ingenico.Direct.Sdk.ResponseException"/>.</returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.ResponseException.GetHeader(System.String)">
            <summary>
            Returns the header with the given name, or <c>null</c> if there was no such header.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.ResponseException.GetHeaderValue(System.String)">
            <summary>
            Returns the value of the header with the given name, or <c>null</c> if there was no such header.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.ResponseHeader">
            <summary>
            A single response header. Immutable.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.ResponseHeaderUtils.GetHeaderValue(System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IResponseHeader},System.String)">
            <returns>
            The value of the header from this with the given name, or <c>null</c> if there was no such header.
            </returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.ResponseHeaderUtils.GetHeader(System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IResponseHeader},System.String)">
            <returns>
            The header from this with the given name, or <c>null</c> if there was no such header.
            </returns>
        </member>
        <member name="M:Ingenico.Direct.Sdk.ResponseHeaderUtils.GetDispositionFilename(System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.ResponseHeader})">
            
             <returns>The value of the <c>filename</c> parameter of the <c>Content-Disposition</c> header from this,
             or <c>null</c> if there was no such header or parameter.</returns>
            
        </member>
        <member name="T:Ingenico.Direct.Sdk.UploadableFile">
            <summary>
            A file that can be uploaded.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.UploadableFile.FileName">
            <summary>
            The name of the file.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.UploadableFile.Content">
            <summary>
            A stream with the file's content.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.UploadableFile.ContentType">
            <summary>
            The file's content type.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.UploadableFile.ContentLength">
            <summary>
            The file's content length, or -1 if not known.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.ValidationException">
            <summary>
            Represents an error response from the Ingenico ePayments platform when validation of requests failed.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Webhooks.ApiVersionMismatchException">
            <summary>
            Represents an error because a webhooks event has an API version that this version of the SDK does not support.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.Webhooks.ApiVersionMismatchException.EventApiVersion">
            <summary>
            The Api version from the webhooks event.
            </summary>
        </member>
        <member name="P:Ingenico.Direct.Sdk.Webhooks.ApiVersionMismatchException.SdkApiVersion">
            <summary>
            The Api version that this version of the SDK supports.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Webhooks.InMemorySecretKeyStore">
            <summary>
            An in-memory secret key store.
            This implementation can be used in applications where secret keys can be specified at application startup.
            Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Webhooks.InMemorySecretKeyStore.StoreSecretKey(System.String,System.String)">
            <summary>
            Stores the given secret key for the given key id.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Webhooks.InMemorySecretKeyStore.RemoveSecretKey(System.String)">
            <summary>
            Removes the secret key for the given key id.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Webhooks.InMemorySecretKeyStore.Clear">
            <summary>
            Removes all stored secret keys
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Webhooks.ISecretKeyStore">
            <summary>
            A store of secret keys. Implementations could store secret keys in a database, on disk, etc.
            Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Webhooks.ISecretKeyStore.GetSecretKey(System.String)">
            <summary>
            Gets the secret key for the given key id. Never <c>null</c>.
            </summary>
            <exception cref="T:Ingenico.Direct.Sdk.Webhooks.SecretKeyNotAvailableException">If the secret key for the given key id is not available.</exception>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Webhooks.SecretKeyNotAvailableException">
            <summary>
            Represents an error that causes a secret key to not be available.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Webhooks.SignatureValidationException">
            <summary>
            Represents an error while validating webhooks signatures.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Webhooks.Webhooks">
            <summary>
            Ingenico ePayments platform factory for several webhooks components.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Webhooks.Webhooks.CreateHelperBuilder(Ingenico.Direct.Sdk.Webhooks.ISecretKeyStore)">
            <summary>
            Creates a <see cref="T:Ingenico.Direct.Sdk.Webhooks.WebhooksHelperBuilder"/> that will use the given <see cref="T:Ingenico.Direct.Sdk.Webhooks.ISecretKeyStore"/>.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Webhooks.Webhooks.CreateHelper(Ingenico.Direct.Sdk.Webhooks.ISecretKeyStore)">
            <summary>
            Creates a <see cref="T:Ingenico.Direct.Sdk.Webhooks.WebhooksHelper"/> that will use the given <see cref="T:Ingenico.Direct.Sdk.Webhooks.ISecretKeyStore"/>.
            </summary>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Webhooks.WebhooksHelper">
            <summary>
            Ingenico ePayments platform webhooks helper. Thread-safe.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Webhooks.WebhooksHelper.Unmarshal(System.String,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader})">
            <summary>
            Unmarshals the given body, while also validating it using the given request headers.
            </summary>
            <exception cref="T:Ingenico.Direct.Sdk.Webhooks.SignatureValidationException">If the body could not be validated successfully.</exception>
            <exception cref="T:Ingenico.Direct.Sdk.Webhooks.ApiVersionMismatchException"> If the resulting event has an API version that this version of the SDK does not support.</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Webhooks.WebhooksHelper.Validate(System.String,System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader})">
            <summary>
            Validates the given body using the given request headers.
            </summary>
            <exception cref="T:Ingenico.Direct.Sdk.Webhooks.SignatureValidationException"> If the body could not be validated sucessfully</exception>
            <exception cref="T:Ingenico.Direct.Sdk.Webhooks.ApiVersionMismatchException"> If the resulting event has an API version that this version of the SDK does not support.</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Webhooks.WebhooksHelper.Unmarshal(System.Byte[],System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader})">
            <summary>
            Unmarshals the given body, while also validating it using the given request headers.
            </summary>
            <exception cref="T:Ingenico.Direct.Sdk.Webhooks.SignatureValidationException">If the body could not be validated successfully.</exception>
            <exception cref="T:Ingenico.Direct.Sdk.Webhooks.ApiVersionMismatchException"> If the resulting event has an API version that this version of the SDK does not support.</exception>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Webhooks.WebhooksHelper.Validate(System.Byte[],System.Collections.Generic.IEnumerable{Ingenico.Direct.Sdk.IRequestHeader})">
            <summary>
            Validates the given body using the given request headers.
            </summary>
            <exception cref="T:Ingenico.Direct.Sdk.Webhooks.SignatureValidationException"> If the body could not be validated sucessfully</exception>
            <exception cref="T:Ingenico.Direct.Sdk.Webhooks.ApiVersionMismatchException"> If the resulting event has an API version that this version of the SDK does not support.</exception>
        </member>
        <member name="T:Ingenico.Direct.Sdk.Webhooks.WebhooksHelperBuilder">
            <summary>
            Builder for a <see cref="T:Ingenico.Direct.Sdk.Webhooks.WebhooksHelper"/> object.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Webhooks.WebhooksHelperBuilder.WithMarshaller(Ingenico.Direct.Sdk.IMarshaller)">
            <summary>
            Sets the <see cref="T:Ingenico.Direct.Sdk.IMarshaller"/> to use.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Webhooks.WebhooksHelperBuilder.WithSecretKeyStore(Ingenico.Direct.Sdk.Webhooks.ISecretKeyStore)">
            <summary>
            Sets the <see cref="T:Ingenico.Direct.Sdk.Webhooks.ISecretKeyStore"/> to use.
            </summary>
        </member>
        <member name="M:Ingenico.Direct.Sdk.Webhooks.WebhooksHelperBuilder.Build">
            <summary>
            Creates a fully initialized <see cref="T:Ingenico.Direct.Sdk.Webhooks.WebhooksHelper"/> object.
            </summary>
            <exception cref="T:System.ArgumentNullException"> If Not all required arguments are set.</exception>
        </member>
    </members>
</doc>
